service: sls-data-pipelines

package:
  individually: true

plugins:
  - serverless-iam-roles-per-function
  - serverless-python-requirements
  - serverless-pseudo-parameters


custom:
  firehoseS3Prefix: 'destination/'
  firehoseCompressionFormat: UNCOMPRESSED


provider:
  name: aws
  runtime: python3.7
  region: eu-west-1
  profile: cloudway-nick
  reservedConcurrency: 1
  versionFunctions: false
  iamManagedPolicies:
    - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
  environment:
    LUMIGO_TRACER_TOKEN: ${ssm:/lumigo/token}
    LUMIGO_ORIGINAL_HANDLER: handler.handle

functions:
  RetrieveXMLTrafficData:
    handler: /opt/python/lumigo_tracer._handler
    module: src/RetrieveXMLTrafficData
    layers:
      - arn:aws:lambda:eu-west-1:114300393969:layer:lumigo-python-tracer:115
    environment:
      TRAFFIC_DATA_URL: "http://miv.opendata.belfla.be/miv/verkeersdata"
      BUCKET_NAME:
        Ref: OriginBucket
      S3_XML_PREFIX: "xml/input/"
    iamRoleStatementsInherit: true
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - s3:PutObject
        Resource:
          Fn::Join:
            - ""
            - - "arn:aws:s3:::"
              - Ref: "OriginBucket"
              - "/*"
    events:
      - schedule:
          rate: rate(1 minute)
          enabled: false

  TransformTrafficToJsonData:
    handler: /opt/python/lumigo_tracer._handler
    module: src/TransformTrafficDataToJson
    layers:
      - arn:aws:lambda:eu-west-1:114300393969:layer:lumigo-python-tracer:115
    environment:
      BUCKET_NAME:
        Ref: OriginBucket
      S3_XML_PREFIX: "xml/input/"
      S3_JSON_PREFIX: "json/input/"
    iamRoleStatementsInherit: true
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - s3:GetObject
          - s3:PutObject
        Resource:
          Fn::Join:
            - ""
            - - "arn:aws:s3:::"
              - Ref: "OriginBucket"
              - "/*"
    events:
      - s3:
          bucket:
            Ref: OriginBucket
          event: s3:ObjectCreated:*
          rules:
            - prefix: xml/input/
            - suffix: .xml
          existing: true

  PublishTrafficData:
    handler: /opt/python/lumigo_tracer._handler
    module: src/PublishTrafficData
    memorySize: 1024
    timeout: 60
    layers:
      - arn:aws:lambda:eu-west-1:114300393969:layer:lumigo-python-tracer:115
    environment:
      BUCKET_NAME:
        Ref: OriginBucket
      S3_JSON_PREFIX: "json/input/"
      DELIVERY_STREAM_NAME:
        Ref: DeliveryStream
    iamRoleStatementsInherit: true
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - s3:GetObject
        Resource:
          Fn::Join:
            - ""
            - - "arn:aws:s3:::"
              - Ref: "OriginBucket"
              - "/*"
      - Effect: "Allow"
        Action:
          - "firehose:PutRecord"
          - "firehose:PutRecordBatch"
        Resource: { Fn::GetAtt: [ DeliveryStream, Arn ] }
    events:
      - s3:
          bucket:
            Ref: OriginBucket
          event: s3:ObjectCreated:*
          rules:
            - prefix: json/input/
            - suffix: .json
          existing: true

  ProcessAnalyticsResults:
    handler: /opt/python/lumigo_tracer._handler
    module: src/ProcessAnalyticsResults
    memorySize: 1024
    timeout: 60
    reservedConcurrency: 5
    layers:
      - arn:aws:lambda:eu-west-1:114300393969:layer:lumigo-python-tracer:115
    environment:
      TABLE_NAME: !Ref AnalyticsResultsTable
    iamRoleStatementsInherit: true
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "kinesis:DescribeStream"
          - "kinesis:GetShardIterator"
          - "kinesis:GetRecords"
        Resource: !GetAtt DestinationStream.Arn
      - Effect: "Allow"
        Action:
          - "dynamodb:DescribeStream"
          - "dynamodb:DescribeTable"
          - "dynamodb:BatchWrite*"
          - "dynamodb:Delete*"
          - "dynamodb:Update*"
          - "dynamodb:PutItem"
        Resource: !GetAtt AnalyticsResultsTable.Arn
      - Effect: "Allow"
        Action:
          - "sqs:SendMessage"
          - "sqs:ListQueues"
        Resource: !GetAtt ProcessAnalyticsDeadQueue.Arn
    events:
      - stream:
          type: kinesis
          arn: !GetAtt DestinationStream.Arn
          batchSize: 10
          batchWindow: 30
#          bisectBatchOnFunctionError: true
          maximumRetryAttempts: 2
          startingPosition: TRIM_HORIZON
          enabled: true
          destinations:
            onFailure:
              arn: !GetAtt ProcessAnalyticsDeadQueue.Arn
              type: sqs

resources:
  - ${file(resources/firehose.yml)}
  - ${file(resources/kinesis.yml)}
  - ${file(resources/sqs.yml)}
  - Resources:
      OriginBucket:
        Type: AWS::S3::Bucket
        Properties:
          BucketName: traffic-data-origin-bucket
      DeliveryBucket:
        Type: AWS::S3::Bucket
        Properties:
          BucketName: traffic-data-destination-bucket
      AnalyticsResultsTable:
        Type: AWS::DynamoDB::Table
        Properties:
          AttributeDefinitions:
            - AttributeName: "uniqueId"
              AttributeType: "S"
            - AttributeName: "recordTimestamp"
              AttributeType: "S"
          KeySchema:
            - AttributeName: "uniqueId"
              KeyType: "HASH"
            - AttributeName: "recordTimestamp"
              KeyType: "RANGE"
          ProvisionedThroughput:
            ReadCapacityUnits: 5
            WriteCapacityUnits: 5
  #  Outputs:
  #     NewOutput:
  #       Description: "Description for the output"
  #       Value: "Some output value"
